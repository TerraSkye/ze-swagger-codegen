<?php

declare(strict_types=1);

namespace {{namespace}};

use Psr\Http\Message\ResponseInterface;
use Psr\Http\Message\ServerRequestInterface;
use Psr\Http\Server\RequestHandlerInterface;
use Laminas\Diactoros\Response\EmptyResponse;

class {{className}} implements RequestHandlerInterface
{
    /**
     * {@inheritDoc}
     */
    public function handle(ServerRequestInterface $request) : ResponseInterface
    {
        {{#if isSingleOperation}}
        return new EmptyResponse(501);
        {{else}}
        switch ($request->getMethod()) {
            {{#operationMethods}}
            case '{{.}}':
                return $this->handle{{.}}($request);
                break;
            {{/operationMethods}}
            default:
                return new EmptyResponse(405);
                break;
        }
        {{/if}}
    }
    {{#unless isSingleOperation}}
    {{#operationMethods}}

    /**
     * @param ServerRequestInterface $request
     *
     * @return ResponseInterface
     */
    protected function handle{{.}}(ServerRequestInterface $request) : ResponseInterface
    {
        return new EmptyResponse(501);
    }
    {{/operationMethods}}
    {{/unless}}
}
